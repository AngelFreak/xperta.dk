version: '3.7'
services:
  traefik:
    image: traefik:v2.5
    container_name: xperta_prod_traefik
    command:
      #- --log.level=DEBUG
      - --api
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=teisangel@tsrv.pw
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true
      
      - traefik.http.routers.traefik.rule=Host(`proxy.xperta.dk`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls.certresolver=le
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$1Ea90fd5$$.Kiki8eF/qyBkJLwN74Y21

  nginx:
    container_name: xperta_prod_web
    restart: on-failure
    image: nginx:1.19.8
    volumes:
      - ./nginx/prod/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
    ports:
      - 5000:80
    depends_on:
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.xperta.rule=Host(`xperta.dk`)
      - traefik.http.routers.xperta.entrypoints=websecure
      - traefik.http.routers.xperta.tls.certresolver=le

  web:
    container_name: xperta_prod_backend
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: always
    volumes:
      - static_volume:/app/staticfiles
    env_file:
      - .env.prod

  mail:
    image: bytemark/smtp
    restart: always

  plausible_db:
    image: postgres:12
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres

  plausible_events_db:
    image: yandex/clickhouse-server:21.3.2.5
    restart: always
    volumes:
      - event-data:/var/lib/clickhouse
      - ./clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro
      - ./clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  plausible:
    image: plausible/analytics:latest
    restart: always
    command: sh -c "sleep 10 && /entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh db init-admin && /entrypoint.sh run"
    depends_on:
      - plausible_db
      - plausible_events_db
      - mail
    labels:
      - traefik.enable=true
      - traefik.http.routers.plausible.rule=Host(`stats.xperta.dk`)
      - traefik.http.routers.plausible.entrypoints=websecure
      - traefik.http.routers.plausible.tls.certresolver=le
      - traefik.http.routers.portainer-rtr.service=plausible-svc
      - traefik.http.services.plausible-svc.loadbalancer.server.port=8000
    env_file:
      - plausible-conf.env

volumes:
  static_volume:
    driver: local
  db-data:
    driver: local
  event-data:
    driver: local
  geoip:
    driver: local